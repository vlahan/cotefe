CTF Y3 Demo Tutorial

Introduction

This document is a tutorial of the Y3 Review Demo of the CONET Testbed Federation (CTF). The demo shows how to use the CTF APIs for specification and execution of a Cooperating Object experiment. A stand-alone Java application is used for visualization of the network topology at the different steps of the experiment.
Description of the experiment

This experiments aims to demonstrate the effect of interference...
Code

Dowload the python scripts and the images from

https://svn.tkn.tu-berlin.de/svn/conet-testbed-federation/y3_demo/

folder structure
README (a txt version of this tutorial)
images/ (software images to be burned into node groups respectively)
scripts/ (python scripts execunting this demo)
demo_TFA_0_experiment_definition.py (creates an experiment)
demo_TFA_1_job_reservation.py (creates a job on twist)
demo_TFA_2A_job_deployment.py (installation of publishers and subscriber)
demo_TFA_2B_job_execution.py (installation of interferes + erase of interferers)


Download the GUI from

https://svn.tkn.tu-berlin.de/svn/tub-t2-contrib/trunk/apps/CONETDemo/gui
How to start the GUI

Node 12 is the subscriber node (sink)
Nodes 187 and 93 are the interferer nodes
All other nodes are publishers

Start the SSH tunnel to the serial forwarded of the sink node (password neniadgosp)

ssh -nNxTL 9012:localhost:9012 twistextern@www.twist.tu-berlin.de

Set the classpath for the Java GUI

CLASSPATH=/absolute/path/to/TinyCOPS_GUI.jar

Launch the Java GUI as jar (works on Linux)

java -jar TinyCOPS_GUI.jar

or as class (works on Mac OS X)

java net.tinyos.surge.MainClass sf@localhost:9012 12 NONE NONE NONE 187 93

alternatively it is possible to wrap the command into a while loop allowing the GUI to restart again in case of failed connection to the sink

while [ 1 ]; do java net.tinyos.surge.MainClass sf@localhost:9012 12 NONE NONE NONE 187 93; sleep 1; done

Robot control through the RESTful API (TAA)


native_id = 1000

GET https://www.twist.tu-berlin.de:8001/nodes/4dd1ba50

to get position

PATCH https://www.twist.tu-berlin.de:8001/nodes/4dd1ba50

with body

{
    "location_x" : 1.0,
    "location_y" : 1.0,
    "location_z" : 1.0
}

to set position

COORDINATES OF THE CORNERS OF THE ROBOT ROOM (by Jasper)

x0y1 = (25.5, 5)
x1y1 = (29.5, 5)
x1y0 = (29.5, 1.5)
x0y0 = (25.5, 1.5)

POSSIBLE WAYPOINTS

A = (27, 3)
B = (28, 4)
CTF Web Fronted

~/Downloads/appengine-java-sdk-1.5.1/bin/appcfg.sh --enable_jar_splitting update war